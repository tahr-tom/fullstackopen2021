{"version":3,"sources":["Filter.js","Notification.js","PersonForm.js","Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","searchTerm","setSearchTerm","value","onChange","event","target","Notification","message","error","className","PersonForm","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","type","Persons","persons","removePerson","filter","name","toLowerCase","includes","map","person","number","onClick","id","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","App","useState","setPersons","setMessage","setError","useEffect","personService","initialPersons","returnedPerson","concat","setTimeout","catch","updateNumber","changedPerson","console","log","startsWith","preventDefault","find","p","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3e3f325.chunk.js","sourcesContent":["const Filter = ({ searchTerm, setSearchTerm }) => {\n  return (\n    <div>\n      filter shown with{\" \"}\n      <input\n        value={searchTerm}\n        onChange={(event) => setSearchTerm(event.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","const Notification = ({ message, error }) => {\n  if (message === null && error === null) {\n    return null\n  }\n\n  if (error === null) {\n    return <div className=\"message\">{message}</div>\n  }\n\n  return <div className=\"error\">{error}</div>\n}\n\nexport default Notification\n","const PersonForm = ({\n  addPerson,\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name:{\" \"}\n        <input\n          value={newName}\n          onChange={(event) => setNewName(event.target.value)}\n        />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newNumber}\n          onChange={(event) => setNewNumber(event.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","const Persons = ({ persons, searchTerm, removePerson }) => {\n  return (\n    <div>\n      {\" \"}\n      {persons\n        .filter(({ name }) =>\n          name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n        .map((person) => (\n          <div key={person.name}>\n            {`${person.name} ${person.number}`}{\" \"}\n            <button onClick={() => removePerson(person.id)}>delete</button>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nexport default Persons\n","import axios from \"axios\"\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then()\n}\n\nexport default { getAll, create, update, remove }\n","import React, { useEffect, useState } from \"react\"\nimport Filter from \"./Filter\"\nimport Notification from \"./Notification\"\nimport PersonForm from \"./PersonForm\"\nimport Persons from \"./Persons\"\nimport personService from \"./services/persons\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => setPersons(initialPersons))\n  }, [])\n\n  const addOrUpdatePerson = (event) => {\n    event.preventDefault()\n\n    const person = persons.find((p) => p.name === newName)\n    if (person) {\n      const message = `${newName} is already added to phonebook, replace the old number with a new one?`\n      const shouldUpdate = window.confirm(message)\n      if (!shouldUpdate) return\n      updateNumber(person)\n    } else {\n      addPerson()\n    }\n  }\n\n  const addPerson = () => {\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n\n    personService\n      .create(newPerson)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName(\"\")\n        setNewNumber(\"\")\n        setMessage(`Added ${newPerson.name}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      })\n      .catch((error) => {\n        setError(error.response.data.error)\n        setTimeout(() => {\n          setError(null)\n        }, 3000)\n      })\n  }\n\n  const updateNumber = (person) => {\n    const changedPerson = { ...person, number: newNumber }\n    personService\n      .update(person.id, changedPerson)\n      .then((returnedPerson) => {\n        setPersons(\n          persons.map((person) =>\n            person.name !== newName ? person : returnedPerson\n          )\n        )\n        setMessage(`Changed ${person.name}' number to ${newNumber}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n      })\n      .catch((error) => {\n        console.log(error.response)\n        if (error.response.data.error.startsWith(\"Validation\")) {\n          setError(error.response.data.error)\n        } else {\n          setError(\n            `Information of ${person.name} has already been removed from server`\n          )\n        }\n        setTimeout(() => {\n          setError(null)\n        }, 3000)\n      })\n  }\n\n  const removePerson = (id) => {\n    personService.remove(id).then(() => {\n      setPersons(persons.filter((person) => person.id !== id))\n    })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} error={error} />\n      <Filter searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addOrUpdatePerson}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        searchTerm={searchTerm}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}